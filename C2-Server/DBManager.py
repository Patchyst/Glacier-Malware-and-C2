from pymongo import MongoClient
import pprint
from CLI import *

class DBManager:
    def __init__(self, db_addr):
        client = MongoClient(db_addr)
        self.serv_admin = client.admin
        self.c2_db = client.C2Data
    
    def db_get_agent(self, agentName):
        agents = self.c2_db.agents.find()
        agentNameList = self.db_get_agent_list()
        if agentName in agentNameList:
            for agent in agents:
                if(agent["name"] == agentName):
                    return agent
        else:
            print("Agent not found in list")

    def db_get_agent_list(self):
        agent_names = []
        agents = self.c2_db.agents.find()
        for agent in agents:
            agent_names.append(agent["name"])
        return agent_names
    
    def db_get_agent_objects(self):
        return self.c2_db.agents.find()

    def db_get_status(self):
        pprint(self.serv_admin.command("serverStatus")['connections'])

    def db_toggle_agent(self, args):
        agentName = args.agent_name
        agentObj = self.db_get_agent(agentName)

        if agentName not in self.db_get_agent_list():
            p_failure(agentName+" is not a registered agent")
            return
        if agentObj["toggled"]:
            p_success(agentName+" activated = False")
            filter = {"name": agentName}
            updated_val = {"$set": {"toggled": False}}
            self.c2_db.agents.update_one(filter, updated_val)
        else:
            p_success(agentName+" activated = True")
            filter = {"name": agentName}
            updated_val = {"$set": {"toggled": True}}
            self.c2_db.agents.update_one(filter, updated_val)
    
    def db_del_agent(self, agent_name):
        
        agent_obj = self.db_get_agent(agent_name)
        self.c2_db.agents.delete_one(agent_obj)
    
    def db_add_agent(self, new_agent):
        db_agent = {
            'name': new_agent.agent_name,
            'hostname': new_agent.hostname,
            'remoteIP': new_agent.address,
            'toggled': False
        }
        self.c2_db.agents.insert_one(db_agent)

    def db_get_toggled_agents(self):
        toggled_anames = []
        for agent_obj in self.db_get_agent_objects():
            if agent_obj["toggled"]:
                toggled_anames.append(agent_obj["name"])
        return toggled_anames
